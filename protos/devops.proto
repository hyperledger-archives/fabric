/*
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
*/

syntax = "proto3";

package protos;

import "chaincode.proto";
import "fabric.proto";

// Interface exported by the server.
service Devops {
    // Log in - passed Secret object and returns Response object, where
    // msg is the security context to be used in subsequent invocations
    rpc Login(Secret) returns (Response) {}

    // Build the chaincode package.
    rpc Build(ChaincodeSpec) returns (ChaincodeDeploymentSpec) {}

    // Deploy the chaincode package to the chain.
    rpc Deploy(ChaincodeSpec) returns (ChaincodeDeploymentSpec) {}

    // Invoke chaincode.
    rpc Invoke(ChaincodeInvocationSpec) returns (Response) {}

    // Invoke chaincode.
    rpc Query(ChaincodeInvocationSpec) returns (Response) {}

}


// Secret is a temporary object to establish security with the Devops.
// A better solution using certificate will be introduced later
message Secret {
    string enrollId = 1;
    string enrollSecret = 2;
}

message BuildResult {

    enum StatusCode {
        UNDEFINED = 0;
        SUCCESS = 1;
        FAILURE = 2;
    }

    StatusCode status = 1;
    string msg = 2;
    ChaincodeDeploymentSpec deploymentSpec = 3;
}
