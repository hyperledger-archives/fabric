# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import fabric_pb2 as fabric__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='api.proto',
  package='protos',
  syntax='proto3',
  serialized_pb=_b('\n\tapi.proto\x12\x06protos\x1a\x0c\x66\x61\x62ric.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x1d\n\x0b\x42lockNumber\x12\x0e\n\x06number\x18\x01 \x01(\x04\"\x1b\n\nBlockCount\x12\r\n\x05\x63ount\x18\x01 \x01(\x04\x32\x87\x02\n\tOpenchain\x12\x45\n\x11GetBlockchainInfo\x12\x16.google.protobuf.Empty\x1a\x16.protos.BlockchainInfo\"\x00\x12\x38\n\x10GetBlockByNumber\x12\x13.protos.BlockNumber\x1a\r.protos.Block\"\x00\x12=\n\rGetBlockCount\x12\x16.google.protobuf.Empty\x1a\x12.protos.BlockCount\"\x00\x12:\n\x08GetPeers\x12\x16.google.protobuf.Empty\x1a\x14.protos.PeersMessage\"\x00\x62\x06proto3')
  ,
  dependencies=[fabric__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_BLOCKNUMBER = _descriptor.Descriptor(
  name='BlockNumber',
  full_name='protos.BlockNumber',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='number', full_name='protos.BlockNumber.number', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=93,
)


_BLOCKCOUNT = _descriptor.Descriptor(
  name='BlockCount',
  full_name='protos.BlockCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='protos.BlockCount.count', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=122,
)

DESCRIPTOR.message_types_by_name['BlockNumber'] = _BLOCKNUMBER
DESCRIPTOR.message_types_by_name['BlockCount'] = _BLOCKCOUNT

BlockNumber = _reflection.GeneratedProtocolMessageType('BlockNumber', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKNUMBER,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:protos.BlockNumber)
  ))
_sym_db.RegisterMessage(BlockNumber)

BlockCount = _reflection.GeneratedProtocolMessageType('BlockCount', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKCOUNT,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:protos.BlockCount)
  ))
_sym_db.RegisterMessage(BlockCount)


import abc
import six
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaOpenchainServicer(object):
  """Interface exported by the server.
  """
  def GetBlockchainInfo(self, request, context):
    """GetBlockchainInfo returns information about the blockchain ledger such as
    height, current block hash, and previous block hash.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetBlockByNumber(self, request, context):
    """GetBlockByNumber returns the data contained within a specific block in the
    blockchain. The genesis block is block zero.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetBlockCount(self, request, context):
    """GetBlockCount returns the current number of blocks in the blockchain data
    structure.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetPeers(self, request, context):
    """GetPeers returns a list of all peer nodes currently connected to the target
    peer.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

class BetaOpenchainStub(object):
  """Interface exported by the server.
  """
  def GetBlockchainInfo(self, request, timeout):
    """GetBlockchainInfo returns information about the blockchain ledger such as
    height, current block hash, and previous block hash.
    """
    raise NotImplementedError()
  GetBlockchainInfo.future = None
  def GetBlockByNumber(self, request, timeout):
    """GetBlockByNumber returns the data contained within a specific block in the
    blockchain. The genesis block is block zero.
    """
    raise NotImplementedError()
  GetBlockByNumber.future = None
  def GetBlockCount(self, request, timeout):
    """GetBlockCount returns the current number of blocks in the blockchain data
    structure.
    """
    raise NotImplementedError()
  GetBlockCount.future = None
  def GetPeers(self, request, timeout):
    """GetPeers returns a list of all peer nodes currently connected to the target
    peer.
    """
    raise NotImplementedError()
  GetPeers.future = None

def beta_create_Openchain_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import google.protobuf.empty_pb2
  import fabric_pb2
  import api_pb2
  import fabric_pb2
  import google.protobuf.empty_pb2
  import api_pb2
  import google.protobuf.empty_pb2
  import fabric_pb2
  request_deserializers = {
    ('protos.Openchain', 'GetBlockByNumber'): api_pb2.BlockNumber.FromString,
    ('protos.Openchain', 'GetBlockCount'): google.protobuf.empty_pb2.Empty.FromString,
    ('protos.Openchain', 'GetBlockchainInfo'): google.protobuf.empty_pb2.Empty.FromString,
    ('protos.Openchain', 'GetPeers'): google.protobuf.empty_pb2.Empty.FromString,
  }
  response_serializers = {
    ('protos.Openchain', 'GetBlockByNumber'): fabric_pb2.Block.SerializeToString,
    ('protos.Openchain', 'GetBlockCount'): api_pb2.BlockCount.SerializeToString,
    ('protos.Openchain', 'GetBlockchainInfo'): fabric_pb2.BlockchainInfo.SerializeToString,
    ('protos.Openchain', 'GetPeers'): fabric_pb2.PeersMessage.SerializeToString,
  }
  method_implementations = {
    ('protos.Openchain', 'GetBlockByNumber'): face_utilities.unary_unary_inline(servicer.GetBlockByNumber),
    ('protos.Openchain', 'GetBlockCount'): face_utilities.unary_unary_inline(servicer.GetBlockCount),
    ('protos.Openchain', 'GetBlockchainInfo'): face_utilities.unary_unary_inline(servicer.GetBlockchainInfo),
    ('protos.Openchain', 'GetPeers'): face_utilities.unary_unary_inline(servicer.GetPeers),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_Openchain_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import google.protobuf.empty_pb2
  import fabric_pb2
  import api_pb2
  import fabric_pb2
  import google.protobuf.empty_pb2
  import api_pb2
  import google.protobuf.empty_pb2
  import fabric_pb2
  request_serializers = {
    ('protos.Openchain', 'GetBlockByNumber'): api_pb2.BlockNumber.SerializeToString,
    ('protos.Openchain', 'GetBlockCount'): google.protobuf.empty_pb2.Empty.SerializeToString,
    ('protos.Openchain', 'GetBlockchainInfo'): google.protobuf.empty_pb2.Empty.SerializeToString,
    ('protos.Openchain', 'GetPeers'): google.protobuf.empty_pb2.Empty.SerializeToString,
  }
  response_deserializers = {
    ('protos.Openchain', 'GetBlockByNumber'): fabric_pb2.Block.FromString,
    ('protos.Openchain', 'GetBlockCount'): api_pb2.BlockCount.FromString,
    ('protos.Openchain', 'GetBlockchainInfo'): fabric_pb2.BlockchainInfo.FromString,
    ('protos.Openchain', 'GetPeers'): fabric_pb2.PeersMessage.FromString,
  }
  cardinalities = {
    'GetBlockByNumber': cardinality.Cardinality.UNARY_UNARY,
    'GetBlockCount': cardinality.Cardinality.UNARY_UNARY,
    'GetBlockchainInfo': cardinality.Cardinality.UNARY_UNARY,
    'GetPeers': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'protos.Openchain', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
